<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 标签 - ieblYang</title>
        <link>https://ieblyang.tech/tags/java/</link>
        <description>Java - 标签 - ieblYang</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>bolon.young@gmail.com (ieblYang)</managingEditor>
            <webMaster>bolon.young@gmail.com (ieblYang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 12 Jan 2022 09:34:40 &#43;0800</lastBuildDate><atom:link href="https://ieblyang.tech/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>[Java核心技术] static、final和常量设计</title>
    <link>https://ieblyang.tech/java04/</link>
    <pubDate>Wed, 12 Jan 2022 09:34:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/java04/</guid>
    <description><![CDATA[<p>Java 核心技术读书笔记——Java static、final和常量设计</p>]]></description>
</item><item>
    <title>[Java核心技术] 继承、接口和抽象类</title>
    <link>https://ieblyang.tech/java03/</link>
    <pubDate>Tue, 11 Jan 2022 10:34:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/java03/</guid>
    <description><![CDATA[<p>Java 核心技术读书笔记——Java 继承、接口和抽象类</p>]]></description>
</item><item>
    <title>58. 最后一个单词的长度</title>
    <link>https://ieblyang.tech/58/</link>
    <pubDate>Sun, 07 Mar 2021 18:28:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/58/</guid>
    <description><![CDATA[<p>给你一个字符串 s，由若干单词组成，单词之间用空格隔开。返回字符串中最后一个单词的长度。如果不存在最后一个单词，请返回 0 。</p>
<p><strong>单词</strong> 是指仅由字母组成、不包含任何空格字符的最大子字符串。</p>]]></description>
</item><item>
    <title>53. 最大子序和</title>
    <link>https://ieblyang.tech/53/</link>
    <pubDate>Sun, 07 Mar 2021 17:39:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/53/</guid>
    <description><![CDATA[<p>给定一个整数数组 <code>nums</code>，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p>]]></description>
</item><item>
    <title>38. 外观数列</title>
    <link>https://ieblyang.tech/38/</link>
    <pubDate>Thu, 04 Mar 2021 19:12:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/38/</guid>
    <description><![CDATA[<p>给定一个正整数 n ，输出外观数列的第 n 项。</p>
<p>「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。</p>]]></description>
</item><item>
    <title>35. 搜索插入位置</title>
    <link>https://ieblyang.tech/35/</link>
    <pubDate>Thu, 04 Mar 2021 18:36:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/35/</guid>
    <description><![CDATA[<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>]]></description>
</item><item>
    <title>28. 实现 strStr()</title>
    <link>https://ieblyang.tech/28/</link>
    <pubDate>Sat, 27 Feb 2021 17:59:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/28/</guid>
    <description><![CDATA[<p>实现 <code>strStr()</code> 函数。</p>
<p>给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回 <code>-1</code>。</p>]]></description>
</item><item>
    <title>27. 移除元素</title>
    <link>https://ieblyang.tech/27/</link>
    <pubDate>Fri, 26 Feb 2021 11:56:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/27/</guid>
    <description><![CDATA[<p>给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要 <strong>原地</strong> 移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。</p>]]></description>
</item><item>
    <title>26. 删除排序数组中的重复项</title>
    <link>https://ieblyang.tech/26/</link>
    <pubDate>Fri, 26 Feb 2021 10:15:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/26/</guid>
    <description><![CDATA[<p>给定一个排序数组，你需要在 <strong>原地</strong> 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。</p>]]></description>
</item><item>
    <title>21. 合并两个有序链表</title>
    <link>https://ieblyang.tech/21/</link>
    <pubDate>Thu, 25 Feb 2021 12:40:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://ieblyang.tech/21/</guid>
    <description><![CDATA[<p>将两个升序链表合并为一个新的 <strong>升序</strong>链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。</p>]]></description>
</item></channel>
</rss>
